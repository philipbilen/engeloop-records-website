/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/dashboard-stats/route";
exports.ids = ["app/api/admin/dashboard-stats/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive":
/*!************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/main/ sync ***!
  \************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&page=%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fdashboard-stats%2Froute.ts&appDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&page=%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fdashboard-stats%2Froute.ts&appDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_philip_Desktop_engeloop_website_engeloop_records_old_src_app_api_admin_dashboard_stats_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/admin/dashboard-stats/route.ts */ \"(rsc)/./src/app/api/admin/dashboard-stats/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/dashboard-stats/route\",\n        pathname: \"/api/admin/dashboard-stats\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/dashboard-stats/route\"\n    },\n    resolvedPagePath: \"/Users/philip/Desktop/engeloop-website/engeloop-records-old/src/app/api/admin/dashboard-stats/route.ts\",\n    nextConfigOutput,\n    userland: _Users_philip_Desktop_engeloop_website_engeloop_records_old_src_app_api_admin_dashboard_stats_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZhZG1pbiUyRmRhc2hib2FyZC1zdGF0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYWRtaW4lMkZkYXNoYm9hcmQtc3RhdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhZG1pbiUyRmRhc2hib2FyZC1zdGF0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnBoaWxpcCUyRkRlc2t0b3AlMkZlbmdlbG9vcC13ZWJzaXRlJTJGZW5nZWxvb3AtcmVjb3Jkcy1vbGQlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGcGhpbGlwJTJGRGVza3RvcCUyRmVuZ2Vsb29wLXdlYnNpdGUlMkZlbmdlbG9vcC1yZWNvcmRzLW9sZCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDc0Q7QUFDbkk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9waGlsaXAvRGVza3RvcC9lbmdlbG9vcC13ZWJzaXRlL2VuZ2Vsb29wLXJlY29yZHMtb2xkL3NyYy9hcHAvYXBpL2FkbWluL2Rhc2hib2FyZC1zdGF0cy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWRtaW4vZGFzaGJvYXJkLXN0YXRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vZGFzaGJvYXJkLXN0YXRzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hZG1pbi9kYXNoYm9hcmQtc3RhdHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvcGhpbGlwL0Rlc2t0b3AvZW5nZWxvb3Atd2Vic2l0ZS9lbmdlbG9vcC1yZWNvcmRzLW9sZC9zcmMvYXBwL2FwaS9hZG1pbi9kYXNoYm9hcmQtc3RhdHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&page=%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fdashboard-stats%2Froute.ts&appDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/admin/dashboard-stats/route.ts":
/*!****************************************************!*\
  !*** ./src/app/api/admin/dashboard-stats/route.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _lib_apiUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/apiUtils */ \"(rsc)/./src/lib/apiUtils.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/logger */ \"(rsc)/./src/lib/logger.ts\");\n/* harmony import */ var _lib_errorHandling__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/errorHandling */ \"(rsc)/./src/lib/errorHandling.ts\");\n/* harmony import */ var _lib_rateLimiting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/rateLimiting */ \"(rsc)/./src/lib/rateLimiting.ts\");\n// src/app/api/admin/dashboard-stats/route.ts\n\n\n\n\n\n\nconst GET = (0,_lib_apiUtils__WEBPACK_IMPORTED_MODULE_2__.withAdminAuth)(async (request, user)=>{\n    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.admin(\"Dashboard stats requested\", user.email);\n    return (0,_lib_errorHandling__WEBPACK_IMPORTED_MODULE_4__.withErrorHandling)(async ()=>{\n        const supabase = (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.getServiceRoleSupabase)();\n        _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.admin(\"Fetching dashboard statistics\", user.email);\n        // Calculate date ranges\n        const now = new Date();\n        const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n        const last7Days = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        // Fetch all stats in parallel for better performance\n        const [{ count: pendingSubmissions, error: pendingError }, { count: totalArtists, error: artistsError }, { count: recentSubmissions, error: recentError }, { count: submissionsThisMonth, error: monthlyError }] = await Promise.all([\n            // Pending demo submissions\n            supabase.from(\"demo_submissions\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            }).eq(\"submission_status\", \"pending\"),\n            // Total artists\n            supabase.from(\"artists\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            }),\n            // Recent submissions (last 7 days)\n            supabase.from(\"demo_submissions\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            }).gte(\"submitted_at\", last7Days.toISOString()),\n            // Submissions this month\n            supabase.from(\"demo_submissions\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            }).gte(\"submitted_at\", startOfMonth.toISOString())\n        ]);\n        // Log any specific errors but don't fail the entire request\n        if (pendingError) {\n            _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error fetching pending submissions\", pendingError, {\n                user: user.email\n            });\n        }\n        if (artistsError) {\n            _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error fetching artists count\", artistsError, {\n                user: user.email\n            });\n        }\n        if (recentError) {\n            _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error fetching recent submissions\", recentError, {\n                user: user.email\n            });\n        }\n        if (monthlyError) {\n            _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error fetching monthly submissions\", monthlyError, {\n                user: user.email\n            });\n        }\n        // For now, we'll use placeholder values for features not yet implemented\n        const stats = {\n            pendingSubmissions: pendingSubmissions || 0,\n            activeContracts: 8,\n            upcomingReleases: 3,\n            totalArtists: totalArtists || 0,\n            recentSubmissions: recentSubmissions || 0,\n            submissionsThisMonth: submissionsThisMonth || 0\n        };\n        _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.admin(\"Dashboard stats retrieved successfully\", user.email, {\n            pendingSubmissions: stats.pendingSubmissions,\n            totalArtists: stats.totalArtists,\n            recentSubmissions: stats.recentSubmissions\n        });\n        return (0,_lib_apiUtils__WEBPACK_IMPORTED_MODULE_2__.createSuccessResponse)(stats, undefined, 200);\n    }, {\n        operation: \"dashboard_stats_fetch\",\n        adminUser: user.email\n    }).then((result)=>{\n        if (result.error) {\n            _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.admin(\"Dashboard stats fetch failed\", user.email, {\n                errorType: result.error.type,\n                errorMessage: result.error.message\n            });\n            return (0,_lib_apiUtils__WEBPACK_IMPORTED_MODULE_2__.createErrorResponse)(result.error.userMessage, result.error.statusCode || 500);\n        }\n        return result.data;\n    });\n});\n// Optional: Add a POST method for refreshing stats cache if needed\nconst POST = (0,_lib_apiUtils__WEBPACK_IMPORTED_MODULE_2__.withAdminAuth)(async (request, user)=>{\n    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.admin(\"Dashboard stats refresh requested\", user.email);\n    return (0,_lib_errorHandling__WEBPACK_IMPORTED_MODULE_4__.withErrorHandling)(async ()=>{\n        // Check rate limiting for admin operations\n        const rateLimitResult = await (0,_lib_rateLimiting__WEBPACK_IMPORTED_MODULE_5__.checkAdminSyncLimit)(user.email, {\n            operation: \"dashboard_refresh\"\n        });\n        if (!rateLimitResult.allowed) {\n            _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.admin(\"Dashboard refresh rate limited\", user.email, {\n                remainingAttempts: rateLimitResult.remainingAttempts,\n                resetTime: rateLimitResult.resetTime\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: rateLimitResult.message,\n                retryAfter: Math.ceil((rateLimitResult.resetTime.getTime() - Date.now()) / 1000)\n            }, {\n                status: 429,\n                headers: {\n                    \"Retry-After\": Math.ceil((rateLimitResult.resetTime.getTime() - Date.now()) / 1000).toString()\n                }\n            });\n        }\n        // For now, just call the GET method to refresh stats\n        // In the future, this could clear caches, trigger background jobs, etc.\n        const getRequest = new Request(request.url, {\n            method: \"GET\",\n            headers: request.headers\n        });\n        return GET(getRequest);\n    }, {\n        operation: \"dashboard_stats_refresh\",\n        adminUser: user.email\n    }).then((result)=>{\n        if (result.error) {\n            return (0,_lib_apiUtils__WEBPACK_IMPORTED_MODULE_2__.createErrorResponse)(result.error.userMessage, result.error.statusCode || 500);\n        }\n        return result.data;\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/admin/dashboard-stats/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/apiUtils.ts":
/*!*****************************!*\
  !*** ./src/lib/apiUtils.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAdminAuth: () => (/* binding */ checkAdminAuth),\n/* harmony export */   createErrorResponse: () => (/* binding */ createErrorResponse),\n/* harmony export */   createSuccessResponse: () => (/* binding */ createSuccessResponse),\n/* harmony export */   makeAuthenticatedRequest: () => (/* binding */ makeAuthenticatedRequest),\n/* harmony export */   withAdminAuth: () => (/* binding */ withAdminAuth)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n// src/lib/apiUtils.ts\n\n\n// Centralized admin authentication check\nasync function checkAdminAuth(request) {\n    try {\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n            return {\n                authorized: false,\n                error: \"Missing or invalid authorization header\"\n            };\n        }\n        const token = authHeader.split(\" \")[1];\n        // Create server client and verify the JWT token\n        const supabase = await (0,_supabase__WEBPACK_IMPORTED_MODULE_1__.createServerSupabaseClient)();\n        const { data: { user }, error } = await supabase.auth.getUser(token);\n        if (error || !user) {\n            return {\n                authorized: false,\n                error: \"Invalid or expired token\"\n            };\n        }\n        // Check if user has admin role\n        const userRole = user.user_metadata?.role;\n        if (userRole !== \"admin\") {\n            return {\n                authorized: false,\n                error: \"Insufficient privileges\"\n            };\n        }\n        return {\n            authorized: true,\n            user: {\n                id: user.id,\n                email: user.email,\n                role: userRole,\n                name: user.user_metadata?.name || user.email?.split(\"@\")[0]\n            }\n        };\n    } catch (error) {\n        console.error(\"Auth check error:\", error);\n        return {\n            authorized: false,\n            error: \"Authentication failed\"\n        };\n    }\n}\n// Standardized error response creator\nfunction createErrorResponse(message, status = 500, details) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: false,\n        error: message,\n        ...typeof details === \"object\" && details !== null ? {\n            details\n        } : {}\n    }, {\n        status\n    });\n}\n// Standardized success response creator\nfunction createSuccessResponse(data, message, status = 200) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        data,\n        ...message && {\n            message\n        }\n    }, {\n        status\n    });\n}\n// Middleware wrapper for admin-only routes\nfunction withAdminAuth(handler) {\n    return async (request)=>{\n        const authResult = await checkAdminAuth(request);\n        if (!authResult.authorized) {\n            return createErrorResponse(authResult.error, 401);\n        }\n        return handler(request, authResult.user);\n    };\n}\n// Helper to get authenticated session for client-side requests\nasync function makeAuthenticatedRequest(url, options = {}, token) {\n    return fetch(url, {\n        ...options,\n        headers: {\n            ...options.headers,\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2FwaVV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzQkFBc0I7QUFFcUI7QUFDYTtBQWV4RCx5Q0FBeUM7QUFDbEMsZUFBZUUsZUFBZUMsT0FBZ0I7SUFDbkQsSUFBSTtRQUNGLE1BQU1DLGFBQWFELFFBQVFFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO1FBRXZDLElBQUksQ0FBQ0YsY0FBYyxDQUFDQSxXQUFXRyxVQUFVLENBQUMsWUFBWTtZQUNwRCxPQUFPO2dCQUNMQyxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7UUFDRjtRQUVBLE1BQU1DLFFBQVFOLFdBQVdPLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUV0QyxnREFBZ0Q7UUFDaEQsTUFBTUMsV0FBVyxNQUFNWCxxRUFBMEJBO1FBQ2pELE1BQU0sRUFDSlksTUFBTSxFQUFFQyxJQUFJLEVBQUUsRUFDZEwsS0FBSyxFQUNOLEdBQUcsTUFBTUcsU0FBU0csSUFBSSxDQUFDQyxPQUFPLENBQUNOO1FBRWhDLElBQUlELFNBQVMsQ0FBQ0ssTUFBTTtZQUNsQixPQUFPO2dCQUFFTixZQUFZO2dCQUFPQyxPQUFPO1lBQTJCO1FBQ2hFO1FBRUEsK0JBQStCO1FBQy9CLE1BQU1RLFdBQVdILEtBQUtJLGFBQWEsRUFBRUM7UUFDckMsSUFBSUYsYUFBYSxTQUFTO1lBQ3hCLE9BQU87Z0JBQUVULFlBQVk7Z0JBQU9DLE9BQU87WUFBMEI7UUFDL0Q7UUFFQSxPQUFPO1lBQ0xELFlBQVk7WUFDWk0sTUFBTTtnQkFDSk0sSUFBSU4sS0FBS00sRUFBRTtnQkFDWEMsT0FBT1AsS0FBS08sS0FBSztnQkFDakJGLE1BQU1GO2dCQUNOSyxNQUFNUixLQUFLSSxhQUFhLEVBQUVJLFFBQVFSLEtBQUtPLEtBQUssRUFBRVYsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUM3RDtRQUNGO0lBQ0YsRUFBRSxPQUFPRixPQUFPO1FBQ2RjLFFBQVFkLEtBQUssQ0FBQyxxQkFBcUJBO1FBQ25DLE9BQU87WUFBRUQsWUFBWTtZQUFPQyxPQUFPO1FBQXdCO0lBQzdEO0FBQ0Y7QUFFQSxzQ0FBc0M7QUFDL0IsU0FBU2Usb0JBQ2RDLE9BQWUsRUFDZkMsU0FBaUIsR0FBRyxFQUNwQkMsT0FBaUI7SUFFakIsT0FBTzNCLHFEQUFZQSxDQUFDNEIsSUFBSSxDQUN0QjtRQUNFQyxTQUFTO1FBQ1RwQixPQUFPZ0I7UUFDUCxHQUFJLE9BQU9FLFlBQVksWUFBWUEsWUFBWSxPQUFPO1lBQUVBO1FBQVEsSUFBSSxDQUFDLENBQUM7SUFDeEUsR0FDQTtRQUFFRDtJQUFPO0FBRWI7QUFFQSx3Q0FBd0M7QUFDakMsU0FBU0ksc0JBQ2RqQixJQUFPLEVBQ1BZLE9BQWdCLEVBQ2hCQyxTQUFpQixHQUFHO0lBRXBCLE9BQU8xQixxREFBWUEsQ0FBQzRCLElBQUksQ0FDdEI7UUFDRUMsU0FBUztRQUNUaEI7UUFDQSxHQUFJWSxXQUFXO1lBQUVBO1FBQVEsQ0FBQztJQUM1QixHQUNBO1FBQUVDO0lBQU87QUFFYjtBQUVBLDJDQUEyQztBQUNwQyxTQUFTSyxjQUNkQyxPQUFxRTtJQUVyRSxPQUFPLE9BQU83QjtRQUNaLE1BQU04QixhQUFhLE1BQU0vQixlQUFlQztRQUV4QyxJQUFJLENBQUM4QixXQUFXekIsVUFBVSxFQUFFO1lBQzFCLE9BQU9nQixvQkFBb0JTLFdBQVd4QixLQUFLLEVBQUc7UUFDaEQ7UUFFQSxPQUFPdUIsUUFBUTdCLFNBQVM4QixXQUFXbkIsSUFBSTtJQUN6QztBQUNGO0FBRUEsK0RBQStEO0FBQ3hELGVBQWVvQix5QkFDcEJDLEdBQVcsRUFDWEMsVUFBdUIsQ0FBQyxDQUFDLEVBQ3pCMUIsS0FBYTtJQUViLE9BQU8yQixNQUFNRixLQUFLO1FBQ2hCLEdBQUdDLE9BQU87UUFDVi9CLFNBQVM7WUFDUCxHQUFHK0IsUUFBUS9CLE9BQU87WUFDbEJpQyxlQUFlLENBQUMsT0FBTyxFQUFFNUIsT0FBTztZQUNoQyxnQkFBZ0I7UUFDbEI7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvcGhpbGlwL0Rlc2t0b3AvZW5nZWxvb3Atd2Vic2l0ZS9lbmdlbG9vcC1yZWNvcmRzLW9sZC9zcmMvbGliL2FwaVV0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvYXBpVXRpbHMudHNcblxuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyBjcmVhdGVTZXJ2ZXJTdXBhYmFzZUNsaWVudCB9IGZyb20gXCIuL3N1cGFiYXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWRtaW5Vc2VyIHtcbiAgaWQ6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgcm9sZTogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhSZXN1bHQge1xuICBhdXRob3JpemVkOiBib29sZWFuO1xuICB1c2VyPzogQWRtaW5Vc2VyO1xuICBlcnJvcj86IHN0cmluZztcbn1cblxuLy8gQ2VudHJhbGl6ZWQgYWRtaW4gYXV0aGVudGljYXRpb24gY2hlY2tcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0FkbWluQXV0aChyZXF1ZXN0OiBSZXF1ZXN0KTogUHJvbWlzZTxBdXRoUmVzdWx0PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgYXV0aEhlYWRlciA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJhdXRob3JpemF0aW9uXCIpO1xuXG4gICAgaWYgKCFhdXRoSGVhZGVyIHx8ICFhdXRoSGVhZGVyLnN0YXJ0c1dpdGgoXCJCZWFyZXIgXCIpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBhdXRob3JpemVkOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IFwiTWlzc2luZyBvciBpbnZhbGlkIGF1dGhvcml6YXRpb24gaGVhZGVyXCIsXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNvbnN0IHRva2VuID0gYXV0aEhlYWRlci5zcGxpdChcIiBcIilbMV07XG5cbiAgICAvLyBDcmVhdGUgc2VydmVyIGNsaWVudCBhbmQgdmVyaWZ5IHRoZSBKV1QgdG9rZW5cbiAgICBjb25zdCBzdXBhYmFzZSA9IGF3YWl0IGNyZWF0ZVNlcnZlclN1cGFiYXNlQ2xpZW50KCk7XG4gICAgY29uc3Qge1xuICAgICAgZGF0YTogeyB1c2VyIH0sXG4gICAgICBlcnJvcixcbiAgICB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKHRva2VuKTtcblxuICAgIGlmIChlcnJvciB8fCAhdXNlcikge1xuICAgICAgcmV0dXJuIHsgYXV0aG9yaXplZDogZmFsc2UsIGVycm9yOiBcIkludmFsaWQgb3IgZXhwaXJlZCB0b2tlblwiIH07XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgdXNlciBoYXMgYWRtaW4gcm9sZVxuICAgIGNvbnN0IHVzZXJSb2xlID0gdXNlci51c2VyX21ldGFkYXRhPy5yb2xlO1xuICAgIGlmICh1c2VyUm9sZSAhPT0gXCJhZG1pblwiKSB7XG4gICAgICByZXR1cm4geyBhdXRob3JpemVkOiBmYWxzZSwgZXJyb3I6IFwiSW5zdWZmaWNpZW50IHByaXZpbGVnZXNcIiB9O1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBhdXRob3JpemVkOiB0cnVlLFxuICAgICAgdXNlcjoge1xuICAgICAgICBpZDogdXNlci5pZCxcbiAgICAgICAgZW1haWw6IHVzZXIuZW1haWwhLFxuICAgICAgICByb2xlOiB1c2VyUm9sZSxcbiAgICAgICAgbmFtZTogdXNlci51c2VyX21ldGFkYXRhPy5uYW1lIHx8IHVzZXIuZW1haWw/LnNwbGl0KFwiQFwiKVswXSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiQXV0aCBjaGVjayBlcnJvcjpcIiwgZXJyb3IpO1xuICAgIHJldHVybiB7IGF1dGhvcml6ZWQ6IGZhbHNlLCBlcnJvcjogXCJBdXRoZW50aWNhdGlvbiBmYWlsZWRcIiB9O1xuICB9XG59XG5cbi8vIFN0YW5kYXJkaXplZCBlcnJvciByZXNwb25zZSBjcmVhdG9yXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXJyb3JSZXNwb25zZShcbiAgbWVzc2FnZTogc3RyaW5nLFxuICBzdGF0dXM6IG51bWJlciA9IDUwMCxcbiAgZGV0YWlscz86IHVua25vd25cbikge1xuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogbWVzc2FnZSxcbiAgICAgIC4uLih0eXBlb2YgZGV0YWlscyA9PT0gXCJvYmplY3RcIiAmJiBkZXRhaWxzICE9PSBudWxsID8geyBkZXRhaWxzIH0gOiB7fSksXG4gICAgfSxcbiAgICB7IHN0YXR1cyB9XG4gICk7XG59XG5cbi8vIFN0YW5kYXJkaXplZCBzdWNjZXNzIHJlc3BvbnNlIGNyZWF0b3JcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWNjZXNzUmVzcG9uc2U8VD4oXG4gIGRhdGE6IFQsXG4gIG1lc3NhZ2U/OiBzdHJpbmcsXG4gIHN0YXR1czogbnVtYmVyID0gMjAwXG4pIHtcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhLFxuICAgICAgLi4uKG1lc3NhZ2UgJiYgeyBtZXNzYWdlIH0pLFxuICAgIH0sXG4gICAgeyBzdGF0dXMgfVxuICApO1xufVxuXG4vLyBNaWRkbGV3YXJlIHdyYXBwZXIgZm9yIGFkbWluLW9ubHkgcm91dGVzXG5leHBvcnQgZnVuY3Rpb24gd2l0aEFkbWluQXV0aChcbiAgaGFuZGxlcjogKHJlcXVlc3Q6IFJlcXVlc3QsIHVzZXI6IEFkbWluVXNlcikgPT4gUHJvbWlzZTxOZXh0UmVzcG9uc2U+XG4pIHtcbiAgcmV0dXJuIGFzeW5jIChyZXF1ZXN0OiBSZXF1ZXN0KTogUHJvbWlzZTxOZXh0UmVzcG9uc2U+ID0+IHtcbiAgICBjb25zdCBhdXRoUmVzdWx0ID0gYXdhaXQgY2hlY2tBZG1pbkF1dGgocmVxdWVzdCk7XG5cbiAgICBpZiAoIWF1dGhSZXN1bHQuYXV0aG9yaXplZCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUVycm9yUmVzcG9uc2UoYXV0aFJlc3VsdC5lcnJvciEsIDQwMSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhhbmRsZXIocmVxdWVzdCwgYXV0aFJlc3VsdC51c2VyISk7XG4gIH07XG59XG5cbi8vIEhlbHBlciB0byBnZXQgYXV0aGVudGljYXRlZCBzZXNzaW9uIGZvciBjbGllbnQtc2lkZSByZXF1ZXN0c1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1ha2VBdXRoZW50aWNhdGVkUmVxdWVzdChcbiAgdXJsOiBzdHJpbmcsXG4gIG9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge30sXG4gIHRva2VuOiBzdHJpbmdcbik6IFByb21pc2U8UmVzcG9uc2U+IHtcbiAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgaGVhZGVyczoge1xuICAgICAgLi4ub3B0aW9ucy5oZWFkZXJzLFxuICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9LFxuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJjcmVhdGVTZXJ2ZXJTdXBhYmFzZUNsaWVudCIsImNoZWNrQWRtaW5BdXRoIiwicmVxdWVzdCIsImF1dGhIZWFkZXIiLCJoZWFkZXJzIiwiZ2V0Iiwic3RhcnRzV2l0aCIsImF1dGhvcml6ZWQiLCJlcnJvciIsInRva2VuIiwic3BsaXQiLCJzdXBhYmFzZSIsImRhdGEiLCJ1c2VyIiwiYXV0aCIsImdldFVzZXIiLCJ1c2VyUm9sZSIsInVzZXJfbWV0YWRhdGEiLCJyb2xlIiwiaWQiLCJlbWFpbCIsIm5hbWUiLCJjb25zb2xlIiwiY3JlYXRlRXJyb3JSZXNwb25zZSIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJkZXRhaWxzIiwianNvbiIsInN1Y2Nlc3MiLCJjcmVhdGVTdWNjZXNzUmVzcG9uc2UiLCJ3aXRoQWRtaW5BdXRoIiwiaGFuZGxlciIsImF1dGhSZXN1bHQiLCJtYWtlQXV0aGVudGljYXRlZFJlcXVlc3QiLCJ1cmwiLCJvcHRpb25zIiwiZmV0Y2giLCJBdXRob3JpemF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/apiUtils.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/errorHandling.ts":
/*!**********************************!*\
  !*** ./src/lib/errorHandling.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_MESSAGES: () => (/* binding */ ERROR_MESSAGES),\n/* harmony export */   ErrorFactory: () => (/* binding */ ErrorFactory),\n/* harmony export */   ErrorHandler: () => (/* binding */ ErrorHandler),\n/* harmony export */   ErrorSeverity: () => (/* binding */ ErrorSeverity),\n/* harmony export */   ErrorType: () => (/* binding */ ErrorType),\n/* harmony export */   createErrorBoundaryState: () => (/* binding */ createErrorBoundaryState),\n/* harmony export */   handleErrorBoundary: () => (/* binding */ handleErrorBoundary),\n/* harmony export */   normalizeError: () => (/* binding */ normalizeError),\n/* harmony export */   withErrorHandling: () => (/* binding */ withErrorHandling),\n/* harmony export */   withRetry: () => (/* binding */ withRetry)\n/* harmony export */ });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"(rsc)/./src/lib/logger.ts\");\n// src/lib/errorHandling.ts\n\n// Error types for better categorization\nvar ErrorType = /*#__PURE__*/ function(ErrorType) {\n    ErrorType[\"NETWORK\"] = \"network\";\n    ErrorType[\"VALIDATION\"] = \"validation\";\n    ErrorType[\"AUTHENTICATION\"] = \"authentication\";\n    ErrorType[\"AUTHORIZATION\"] = \"authorization\";\n    ErrorType[\"NOT_FOUND\"] = \"not_found\";\n    ErrorType[\"RATE_LIMIT\"] = \"rate_limit\";\n    ErrorType[\"SERVER\"] = \"server\";\n    ErrorType[\"EXTERNAL_API\"] = \"external_api\";\n    ErrorType[\"DATABASE\"] = \"database\";\n    return ErrorType;\n}({});\n// Error severity levels\nvar ErrorSeverity = /*#__PURE__*/ function(ErrorSeverity) {\n    ErrorSeverity[\"LOW\"] = \"low\";\n    ErrorSeverity[\"MEDIUM\"] = \"medium\";\n    ErrorSeverity[\"HIGH\"] = \"high\";\n    ErrorSeverity[\"CRITICAL\"] = \"critical\";\n    return ErrorSeverity;\n}({});\n// Error factory functions\nclass ErrorFactory {\n    static createError(type, message, userMessage, severity, options = {}) {\n        return {\n            type,\n            message,\n            userMessage,\n            severity,\n            timestamp: new Date().toISOString(),\n            ...options\n        };\n    }\n    static network(message, userMessage = \"Connection error. Please check your internet connection.\", context) {\n        return this.createError(\"network\", message, userMessage, \"medium\", {\n            statusCode: 503,\n            retryable: true,\n            context\n        });\n    }\n    static validation(message, userMessage = \"Please check your input and try again.\", context) {\n        return this.createError(\"validation\", message, userMessage, \"low\", {\n            statusCode: 400,\n            retryable: false,\n            context\n        });\n    }\n    static authentication(message, userMessage = \"Please log in to continue.\", context) {\n        return this.createError(\"authentication\", message, userMessage, \"medium\", {\n            statusCode: 401,\n            retryable: false,\n            context\n        });\n    }\n    static authorization(message, userMessage = \"You do not have permission to perform this action.\", context) {\n        return this.createError(\"authorization\", message, userMessage, \"medium\", {\n            statusCode: 403,\n            retryable: false,\n            context\n        });\n    }\n    static notFound(message, userMessage = \"The requested resource was not found.\", context) {\n        return this.createError(\"not_found\", message, userMessage, \"low\", {\n            statusCode: 404,\n            retryable: false,\n            context\n        });\n    }\n    static rateLimit(message, userMessage = \"Too many requests. Please wait before trying again.\", context) {\n        return this.createError(\"rate_limit\", message, userMessage, \"medium\", {\n            statusCode: 429,\n            retryable: true,\n            context\n        });\n    }\n    static server(message, userMessage = \"An unexpected error occurred. Please try again later.\", originalError, context) {\n        return this.createError(\"server\", message, userMessage, \"high\", {\n            statusCode: 500,\n            retryable: true,\n            originalError,\n            context\n        });\n    }\n    static externalApi(service, message, userMessage = \"External service temporarily unavailable. Please try again later.\", originalError, context) {\n        return this.createError(\"external_api\", message, userMessage, \"medium\", {\n            statusCode: 503,\n            retryable: true,\n            originalError,\n            context: {\n                service,\n                ...context\n            }\n        });\n    }\n    static database(message, userMessage = \"Database error. Please try again later.\", originalError, context) {\n        return this.createError(\"database\", message, userMessage, \"high\", {\n            statusCode: 500,\n            retryable: true,\n            originalError,\n            context\n        });\n    }\n}\n// Error handler that logs and optionally reports errors\nclass ErrorHandler {\n    static handle(error, reportToExternal = false) {\n        // Log based on severity\n        const logContext = {\n            type: error.type,\n            code: error.code,\n            statusCode: error.statusCode,\n            retryable: error.retryable,\n            ...error.context\n        };\n        switch(error.severity){\n            case \"low\":\n                _logger__WEBPACK_IMPORTED_MODULE_0__.logger.debug(error.message, logContext);\n                break;\n            case \"medium\":\n                _logger__WEBPACK_IMPORTED_MODULE_0__.logger.warn(error.message, logContext);\n                break;\n            case \"high\":\n            case \"critical\":\n                _logger__WEBPACK_IMPORTED_MODULE_0__.logger.error(error.message, error.originalError, logContext);\n                break;\n        }\n        // Report critical errors to external monitoring (implement as needed)\n        if (reportToExternal && error.severity === \"critical\") {\n            this.reportToMonitoring(error);\n        }\n    }\n    static reportToMonitoring(error) {\n        // TODO: Implement external error reporting\n        // Examples: Sentry, LogRocket, Bugsnag, etc.\n        _logger__WEBPACK_IMPORTED_MODULE_0__.logger.info(\"Error reported to monitoring\", {\n            errorId: error.timestamp\n        });\n    }\n}\n// Utility to convert unknown errors to AppError\nfunction normalizeError(error, defaultType = \"server\") {\n    if (error && typeof error === \"object\" && \"type\" in error) {\n        return error;\n    }\n    if (error instanceof Error) {\n        // Handle specific error types\n        if (error.name === \"ValidationError\") {\n            return ErrorFactory.validation(error.message, undefined, {\n                originalName: error.name\n            });\n        }\n        if (error.name === \"NetworkError\" || error.message.includes(\"fetch\")) {\n            return ErrorFactory.network(error.message, undefined, {\n                originalName: error.name\n            });\n        }\n        if (error.message.includes(\"Unauthorized\") || error.message.includes(\"401\")) {\n            return ErrorFactory.authentication(error.message, undefined, {\n                originalName: error.name\n            });\n        }\n        if (error.message.includes(\"Forbidden\") || error.message.includes(\"403\")) {\n            return ErrorFactory.authorization(error.message, undefined, {\n                originalName: error.name\n            });\n        }\n        if (error.message.includes(\"Not found\") || error.message.includes(\"404\")) {\n            return ErrorFactory.notFound(error.message, undefined, {\n                originalName: error.name\n            });\n        }\n        // Default to server error for unknown Error instances\n        return ErrorFactory.server(error.message, undefined, error, {\n            originalName: error.name\n        });\n    }\n    // Handle string errors\n    if (typeof error === \"string\") {\n        return ErrorFactory.server(error, undefined, error);\n    }\n    // Handle unknown error types\n    return ErrorFactory.server(\"An unknown error occurred\", undefined, error, {\n        originalType: typeof error\n    });\n}\n// Async wrapper that catches and normalizes errors\nasync function withErrorHandling(operation, context) {\n    try {\n        const data = await operation();\n        return {\n            data\n        };\n    } catch (error) {\n        const appError = normalizeError(error);\n        appError.context = {\n            ...appError.context,\n            ...context\n        };\n        ErrorHandler.handle(appError);\n        return {\n            error: appError\n        };\n    }\n}\n// Retry wrapper for retryable operations\nasync function withRetry(operation, maxRetries = 3, delayMs = 1000, context) {\n    let lastError;\n    for(let attempt = 1; attempt <= maxRetries; attempt++){\n        try {\n            return await operation();\n        } catch (error) {\n            lastError = normalizeError(error);\n            lastError.context = {\n                ...lastError.context,\n                attempt,\n                maxRetries,\n                ...context\n            };\n            // Don't retry if error is not retryable\n            if (!lastError.retryable || attempt === maxRetries) {\n                ErrorHandler.handle(lastError);\n                throw lastError;\n            }\n            // Log retry attempt\n            _logger__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Operation failed, retrying (${attempt}/${maxRetries})`, lastError.context);\n            // Wait before retrying with exponential backoff\n            const delay = delayMs * Math.pow(2, attempt - 1);\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    // This should never be reached, but TypeScript needs it\n    throw lastError;\n}\nfunction createErrorBoundaryState() {\n    return {\n        hasError: false\n    };\n}\nfunction handleErrorBoundary(error) {\n    const appError = normalizeError(error);\n    ErrorHandler.handle(appError);\n    return {\n        hasError: true,\n        error: appError,\n        errorId: appError.timestamp\n    };\n}\n// Common error messages for consistency\nconst ERROR_MESSAGES = {\n    NETWORK: \"Connection error. Please check your internet connection and try again.\",\n    SERVER: \"Something went wrong on our end. Please try again later.\",\n    VALIDATION: \"Please check your input and try again.\",\n    AUTHENTICATION: \"Please log in to continue.\",\n    AUTHORIZATION: \"You do not have permission to perform this action.\",\n    NOT_FOUND: \"The requested resource was not found.\",\n    RATE_LIMIT: \"Too many requests. Please wait a moment before trying again.\",\n    SPOTIFY_API: \"Music service temporarily unavailable. Please try again later.\",\n    DEMO_SUBMISSION: \"Failed to submit demo. Please try again.\",\n    FILE_UPLOAD: \"File upload failed. Please try again.\",\n    FORM_VALIDATION: \"Please fix the errors below and try again.\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/errorHandling.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/logger.ts":
/*!***************************!*\
  !*** ./src/lib/logger.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   withTiming: () => (/* binding */ withTiming)\n/* harmony export */ });\n// src/lib/logger.ts\nclass Logger {\n    constructor(){\n        this.logLevel = process.env.LOG_LEVEL || \"info\";\n        this.isDevelopment = \"development\" === \"development\";\n    }\n    shouldLog(level) {\n        const levels = {\n            debug: 0,\n            info: 1,\n            warn: 2,\n            error: 3\n        };\n        return levels[level] >= levels[this.logLevel];\n    }\n    formatMessage(entry) {\n        if (this.isDevelopment) {\n            // Pretty format for development\n            const emoji = {\n                debug: \"🔍\",\n                info: \"ℹ️\",\n                warn: \"⚠️\",\n                error: \"❌\"\n            };\n            let message = `${emoji[entry.level]} [${entry.timestamp}] ${entry.message}`;\n            if (entry.context && Object.keys(entry.context).length > 0) {\n                message += ` | Context: ${JSON.stringify(entry.context)}`;\n            }\n            if (entry.userEmail) {\n                message += ` | User: ${entry.userEmail}`;\n            }\n            return message;\n        } else {\n            // Structured JSON for production\n            return JSON.stringify(entry);\n        }\n    }\n    log(level, message, error, context, userEmail) {\n        if (!this.shouldLog(level)) return;\n        const entry = {\n            timestamp: new Date().toISOString(),\n            level,\n            message,\n            ...context && {\n                context\n            },\n            ...userEmail && {\n                userEmail\n            }\n        };\n        if (error !== undefined) {\n            entry.error = this.serializeError(error);\n        }\n        const formattedMessage = this.formatMessage(entry);\n        // Use appropriate console method\n        switch(level){\n            case \"debug\":\n                console.debug(formattedMessage);\n                break;\n            case \"info\":\n                console.info(formattedMessage);\n                break;\n            case \"warn\":\n                console.warn(formattedMessage);\n                break;\n            case \"error\":\n                console.error(formattedMessage);\n                if (error && this.isDevelopment) {\n                    console.error(error); // Also log the full error object in dev\n                }\n                break;\n        }\n    }\n    serializeError(error) {\n        if (error instanceof Error) {\n            return {\n                name: error.name,\n                message: error.message,\n                stack: error.stack\n            };\n        }\n        return error;\n    }\n    // Public logging methods\n    debug(message, context) {\n        this.log(\"debug\", message, undefined, context);\n    }\n    info(message, context) {\n        this.log(\"info\", message, undefined, context);\n    }\n    warn(message, context) {\n        this.log(\"warn\", message, undefined, context);\n    }\n    error(message, error, context) {\n        this.log(\"error\", message, error, context);\n    }\n    // Special methods for common use cases\n    admin(message, userEmail, context) {\n        this.log(\"info\", `[ADMIN] ${message}`, undefined, context, userEmail);\n    }\n    api(method, endpoint, status, context) {\n        const level = status >= 400 ? \"error\" : \"info\";\n        this.log(level, `${method} ${endpoint} - ${status}`, undefined, {\n            method,\n            endpoint,\n            status,\n            ...context\n        });\n    }\n    submission(message, context) {\n        this.log(\"info\", `[SUBMISSION] ${message}`, undefined, context);\n    }\n    spotify(message, context) {\n        this.log(\"info\", `[SPOTIFY] ${message}`, undefined, context);\n    }\n    sync(message, userEmail, context) {\n        this.log(\"info\", `[SYNC] ${message}`, undefined, context, userEmail);\n    }\n    // Performance logging\n    performance(operation, duration, context) {\n        this.log(\"info\", `[PERF] ${operation} completed in ${duration}ms`, undefined, {\n            operation,\n            duration,\n            ...context\n        });\n    }\n    // Security logging\n    security(event, context) {\n        this.log(\"warn\", `[SECURITY] ${event}`, undefined, context);\n    }\n}\n// Export singleton instance\nconst logger = new Logger();\n// Helper for timing operations\nfunction withTiming(operation, fn, context) {\n    return new Promise(async (resolve, reject)=>{\n        const start = Date.now();\n        try {\n            const result = await fn();\n            const duration = Date.now() - start;\n            logger.performance(operation, duration, context);\n            resolve(result);\n        } catch (error) {\n            const duration = Date.now() - start;\n            logger.error(`${operation} failed after ${duration}ms`, error, context);\n            reject(error);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/logger.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/rateLimiting.ts":
/*!*********************************!*\
  !*** ./src/lib/rateLimiting.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RATE_LIMIT_CONFIGS: () => (/* binding */ RATE_LIMIT_CONFIGS),\n/* harmony export */   checkAdminSyncLimit: () => (/* binding */ checkAdminSyncLimit),\n/* harmony export */   checkDemoSubmissionLimit: () => (/* binding */ checkDemoSubmissionLimit),\n/* harmony export */   checkGeneralApiLimit: () => (/* binding */ checkGeneralApiLimit),\n/* harmony export */   checkLoginLimit: () => (/* binding */ checkLoginLimit),\n/* harmony export */   getClientIP: () => (/* binding */ getClientIP),\n/* harmony export */   rateLimiter: () => (/* binding */ rateLimiter),\n/* harmony export */   withRateLimit: () => (/* binding */ withRateLimit)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"(rsc)/./src/lib/logger.ts\");\n// src/lib/rateLimiting.ts\n\n\n// Predefined rate limit configurations\nconst RATE_LIMIT_CONFIGS = {\n    DEMO_SUBMISSION: {\n        windowMs: 3600000,\n        maxAttempts: 3,\n        operation: \"demo_submission\"\n    },\n    ADMIN_SYNC: {\n        windowMs: 300000,\n        maxAttempts: 2,\n        operation: \"admin_sync\"\n    },\n    API_GENERAL: {\n        windowMs: 60000,\n        maxAttempts: 60,\n        operation: \"api_general\"\n    },\n    PASSWORD_RESET: {\n        windowMs: 900000,\n        maxAttempts: 3,\n        operation: \"password_reset\"\n    },\n    LOGIN_ATTEMPT: {\n        windowMs: 900000,\n        maxAttempts: 5,\n        operation: \"login_attempt\"\n    }\n};\nclass RateLimiter {\n    /**\n   * Check if an operation is allowed for a given identifier\n   */ async checkRateLimit(identifier, config, metadata) {\n        try {\n            const now = new Date();\n            const windowStart = new Date(now.getTime() - config.windowMs);\n            // Get recent attempts within the window\n            const { data: attempts, error } = await this.supabase.from(\"rate_limit_attempts\").select(\"attempted_at\").eq(\"identifier\", identifier).eq(\"operation\", config.operation).gte(\"attempted_at\", windowStart.toISOString()).order(\"attempted_at\", {\n                ascending: false\n            });\n            if (error) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Rate limit check failed\", error, {\n                    identifier,\n                    operation: config.operation\n                });\n                // Fail open - allow the request if we can't check rate limits\n                return this.createAllowedResult(config.maxAttempts);\n            }\n            const attemptCount = attempts?.length || 0;\n            const remainingAttempts = Math.max(0, config.maxAttempts - attemptCount);\n            const isAllowed = attemptCount < config.maxAttempts;\n            // Calculate reset time (end of current window)\n            const oldestAttempt = attempts?.[attempts.length - 1];\n            const resetTime = oldestAttempt ? new Date(new Date(oldestAttempt.attempted_at).getTime() + config.windowMs) : new Date(now.getTime() + config.windowMs);\n            if (isAllowed) {\n                // Record this attempt\n                await this.recordAttempt(identifier, config.operation, metadata);\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(\"Rate limit check passed\", {\n                    identifier,\n                    operation: config.operation,\n                    attemptCount: attemptCount + 1,\n                    maxAttempts: config.maxAttempts\n                });\n                return {\n                    allowed: true,\n                    remainingAttempts: remainingAttempts - 1,\n                    resetTime\n                };\n            } else {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\"Rate limit exceeded\", {\n                    identifier,\n                    operation: config.operation,\n                    attemptCount,\n                    maxAttempts: config.maxAttempts,\n                    resetTime\n                });\n                return {\n                    allowed: false,\n                    remainingAttempts: 0,\n                    resetTime,\n                    message: `Too many attempts. Please wait until ${resetTime.toLocaleTimeString()} before trying again.`\n                };\n            }\n        } catch (error) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Rate limit system error\", error, {\n                identifier,\n                operation: config.operation\n            });\n            // Fail open - allow the request if there's a system error\n            return this.createAllowedResult(config.maxAttempts);\n        }\n    }\n    /**\n   * Record an attempt in the database\n   */ async recordAttempt(identifier, operation, metadata) {\n        try {\n            const { error } = await this.supabase.from(\"rate_limit_attempts\").insert({\n                identifier,\n                operation,\n                attempted_at: new Date().toISOString(),\n                metadata: metadata || {}\n            });\n            if (error) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Failed to record rate limit attempt\", error, {\n                    identifier,\n                    operation\n                });\n            }\n        } catch (error) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Error recording rate limit attempt\", error, {\n                identifier,\n                operation\n            });\n        }\n    }\n    /**\n   * Clean up old rate limit records (should be called periodically)\n   */ async cleanup(olderThanHours = 24) {\n        try {\n            const cutoffTime = new Date(Date.now() - olderThanHours * 60 * 60 * 1000);\n            const { error } = await this.supabase.from(\"rate_limit_attempts\").delete().lt(\"attempted_at\", cutoffTime.toISOString());\n            if (error) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Rate limit cleanup failed\", error);\n            } else {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(\"Rate limit cleanup completed\", {\n                    cutoffTime\n                });\n            }\n        } catch (error) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Rate limit cleanup error\", error);\n        }\n    }\n    /**\n   * Get rate limit status without recording an attempt\n   */ async getRateLimitStatus(identifier, config) {\n        try {\n            const now = new Date();\n            const windowStart = new Date(now.getTime() - config.windowMs);\n            const { data: attempts, error } = await this.supabase.from(\"rate_limit_attempts\").select(\"attempted_at\").eq(\"identifier\", identifier).eq(\"operation\", config.operation).gte(\"attempted_at\", windowStart.toISOString()).order(\"attempted_at\", {\n                ascending: false\n            });\n            if (error) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Rate limit status check failed\", error);\n                return this.createAllowedResult(config.maxAttempts);\n            }\n            const attemptCount = attempts?.length || 0;\n            const remainingAttempts = Math.max(0, config.maxAttempts - attemptCount);\n            const isAllowed = attemptCount < config.maxAttempts;\n            const oldestAttempt = attempts?.[attempts.length - 1];\n            const resetTime = oldestAttempt ? new Date(new Date(oldestAttempt.attempted_at).getTime() + config.windowMs) : new Date(now.getTime() + config.windowMs);\n            return {\n                allowed: isAllowed,\n                remainingAttempts,\n                resetTime,\n                ...!isAllowed && {\n                    message: `Rate limit exceeded. Resets at ${resetTime.toLocaleTimeString()}`\n                }\n            };\n        } catch (error) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Error checking rate limit status\", error);\n            return this.createAllowedResult(config.maxAttempts);\n        }\n    }\n    /**\n   * Reset rate limit for a specific identifier and operation\n   */ async resetRateLimit(identifier, operation) {\n        try {\n            const { error } = await this.supabase.from(\"rate_limit_attempts\").delete().eq(\"identifier\", identifier).eq(\"operation\", operation);\n            if (error) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Failed to reset rate limit\", error, {\n                    identifier,\n                    operation\n                });\n            } else {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.admin(\"Rate limit reset\", \"system\", {\n                    identifier,\n                    operation\n                });\n            }\n        } catch (error) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Error resetting rate limit\", error, {\n                identifier,\n                operation\n            });\n        }\n    }\n    createAllowedResult(maxAttempts) {\n        return {\n            allowed: true,\n            remainingAttempts: maxAttempts - 1,\n            resetTime: new Date(Date.now() + 3600000)\n        };\n    }\n    constructor(){\n        this.supabase = (0,_supabase__WEBPACK_IMPORTED_MODULE_0__.getServiceRoleSupabase)();\n    }\n}\n// Export singleton instance\nconst rateLimiter = new RateLimiter();\n// Convenience functions for common operations\nasync function checkDemoSubmissionLimit(email, metadata) {\n    return rateLimiter.checkRateLimit(email.toLowerCase(), RATE_LIMIT_CONFIGS.DEMO_SUBMISSION, metadata);\n}\nasync function checkAdminSyncLimit(userEmail, metadata) {\n    return rateLimiter.checkRateLimit(userEmail.toLowerCase(), RATE_LIMIT_CONFIGS.ADMIN_SYNC, metadata);\n}\nasync function checkLoginLimit(identifier, metadata) {\n    return rateLimiter.checkRateLimit(identifier.toLowerCase(), RATE_LIMIT_CONFIGS.LOGIN_ATTEMPT, metadata);\n}\nasync function checkGeneralApiLimit(ipAddress, metadata) {\n    return rateLimiter.checkRateLimit(ipAddress, RATE_LIMIT_CONFIGS.API_GENERAL, metadata);\n}\n// Middleware helper for Next.js API routes\nfunction withRateLimit(config, getIdentifier) {\n    return async (request, handler)=>{\n        const identifier = getIdentifier(request);\n        const result = await rateLimiter.checkRateLimit(identifier, config);\n        if (!result.allowed) {\n            return new Response(JSON.stringify({\n                success: false,\n                error: result.message || \"Rate limit exceeded\",\n                retryAfter: Math.ceil((result.resetTime.getTime() - Date.now()) / 1000)\n            }), {\n                status: 429,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Retry-After\": Math.ceil((result.resetTime.getTime() - Date.now()) / 1000).toString(),\n                    \"X-RateLimit-Limit\": config.maxAttempts.toString(),\n                    \"X-RateLimit-Remaining\": result.remainingAttempts.toString(),\n                    \"X-RateLimit-Reset\": result.resetTime.getTime().toString()\n                }\n            });\n        }\n        return handler();\n    };\n}\n// Helper to extract client IP from request\nfunction getClientIP(request) {\n    // Try various headers that might contain the real IP\n    const headers = [\n        \"x-forwarded-for\",\n        \"x-real-ip\",\n        \"x-client-ip\",\n        \"cf-connecting-ip\",\n        \"x-forwarded\",\n        \"forwarded-for\",\n        \"forwarded\"\n    ];\n    for (const header of headers){\n        const value = request.headers.get(header);\n        if (value) {\n            // x-forwarded-for can contain multiple IPs, take the first one\n            const ip = value.split(\",\")[0].trim();\n            if (ip && ip !== \"unknown\") {\n                return ip;\n            }\n        }\n    }\n    // Fallback\n    return \"unknown\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/rateLimiting.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   createServerSupabaseClient: () => (/* binding */ createServerSupabaseClient),\n/* harmony export */   getServiceRoleSupabase: () => (/* binding */ getServiceRoleSupabase),\n/* harmony export */   handleSupabaseError: () => (/* binding */ handleSupabaseError),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n\nconst supabaseUrl = \"https://asmtfuwmembnntccuoja.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFzbXRmdXdtZW1ibm50Y2N1b2phIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg4MDgzOTUsImV4cCI6MjA2NDM4NDM5NX0.fixKhQtCnonmn5ulqSTRV3u6gZ0tIia2UNminJt83Dg\";\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n// Client-side Supabase client (for frontend components)\nfunction createClient() {\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(supabaseUrl, supabaseAnonKey);\n}\n// Server-side Supabase client (for API routes and server components)\nasync function createServerSupabaseClient(cookieStore) {\n    // If cookieStore is provided (from API routes), use it\n    // Otherwise, import cookies from next/headers (for server components)\n    let cookiesStore = cookieStore;\n    if (!cookiesStore) {\n        const { cookies } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/next\").then(__webpack_require__.bind(__webpack_require__, /*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\"));\n        cookiesStore = await cookies();\n    }\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(supabaseUrl, supabaseAnonKey, {\n        cookies: {\n            getAll () {\n                return cookiesStore.getAll();\n            },\n            setAll (cookiesToSet) {\n                try {\n                    cookiesToSet.forEach(({ name, value, options })=>{\n                        cookiesStore.set(name, value, options);\n                    });\n                } catch  {\n                // The `setAll` method was called from a Server Component.\n                // This can be ignored if you have middleware refreshing\n                // user sessions.\n                }\n            }\n        }\n    });\n}\n// Service role client for admin operations (use sparingly)\nfunction getServiceRoleSupabase() {\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(supabaseUrl, supabaseServiceKey, {\n        cookies: {\n            getAll: ()=>[],\n            setAll: ()=>{}\n        },\n        auth: {\n            autoRefreshToken: false,\n            persistSession: false\n        }\n    });\n}\n// Legacy client for backwards compatibility (deprecated - remove gradually)\nconst supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(supabaseUrl, supabaseAnonKey);\n// Type-safe error handling helper\nfunction handleSupabaseError(error, context) {\n    console.error(`Supabase error in ${context}:`, error);\n    // Type guard to check if error has expected properties\n    if (error && typeof error === \"object\" && \"code\" in error) {\n        const typedError = error;\n        if (typedError.code === \"PGRST116\") {\n            return {\n                error: \"No data found\",\n                status: 404\n            };\n        }\n        if (typedError.code === \"23505\") {\n            return {\n                error: \"Data already exists\",\n                status: 409\n            };\n        }\n        return {\n            error: typedError.message || \"Database operation failed\",\n            status: 500\n        };\n    }\n    // Fallback for unknown error types\n    return {\n        error: error instanceof Error ? error.message : \"Database operation failed\",\n        status: 500\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3RTtBQUd4RSxNQUFNRSxjQUFjQywwQ0FBb0M7QUFDeEQsTUFBTUcsa0JBQWtCSCxrTkFBeUM7QUFDakUsTUFBTUsscUJBQXFCTCxRQUFRQyxHQUFHLENBQUNLLHlCQUF5QjtBQUVoRSx3REFBd0Q7QUFDakQsU0FBU0M7SUFDZCxPQUFPVixrRUFBbUJBLENBQUNFLGFBQWFJO0FBQzFDO0FBRUEscUVBQXFFO0FBQzlELGVBQWVLLDJCQUNwQkMsV0FBb0M7SUFFcEMsdURBQXVEO0lBQ3ZELHNFQUFzRTtJQUN0RSxJQUFJQyxlQUFlRDtJQUVuQixJQUFJLENBQUNDLGNBQWM7UUFDakIsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBRyxNQUFNLG9MQUFzQjtRQUNoREQsZUFBZSxNQUFNQztJQUN2QjtJQUVBLE9BQU9iLGlFQUFrQkEsQ0FBQ0MsYUFBYUksaUJBQWlCO1FBQ3REUSxTQUFTO1lBQ1BDO2dCQUNFLE9BQU9GLGFBQWFFLE1BQU07WUFDNUI7WUFDQUMsUUFBT0MsWUFBWTtnQkFDakIsSUFBSTtvQkFDRkEsYUFBYUMsT0FBTyxDQUFDLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLE9BQU8sRUFBRTt3QkFDNUNSLGFBQWFTLEdBQUcsQ0FBQ0gsTUFBTUMsT0FBT0M7b0JBQ2hDO2dCQUNGLEVBQUUsT0FBTTtnQkFDTiwwREFBMEQ7Z0JBQzFELHdEQUF3RDtnQkFDeEQsaUJBQWlCO2dCQUNuQjtZQUNGO1FBQ0Y7SUFDRjtBQUNGO0FBRUEsMkRBQTJEO0FBQ3BELFNBQVNFO0lBQ2QsT0FBT3RCLGlFQUFrQkEsQ0FBQ0MsYUFBYU0sb0JBQW9CO1FBQ3pETSxTQUFTO1lBQ1BDLFFBQVEsSUFBTSxFQUFFO1lBQ2hCQyxRQUFRLEtBQU87UUFDakI7UUFDQVEsTUFBTTtZQUNKQyxrQkFBa0I7WUFDbEJDLGdCQUFnQjtRQUNsQjtJQUNGO0FBQ0Y7QUFFQSw0RUFBNEU7QUFDckUsTUFBTUMsV0FBVzNCLGtFQUFtQkEsQ0FBQ0UsYUFBYUksaUJBQWlCO0FBRTFFLGtDQUFrQztBQUMzQixTQUFTc0Isb0JBQW9CQyxLQUFjLEVBQUVDLE9BQWU7SUFDakVDLFFBQVFGLEtBQUssQ0FBQyxDQUFDLGtCQUFrQixFQUFFQyxRQUFRLENBQUMsQ0FBQyxFQUFFRDtJQUUvQyx1REFBdUQ7SUFDdkQsSUFBSUEsU0FBUyxPQUFPQSxVQUFVLFlBQVksVUFBVUEsT0FBTztRQUN6RCxNQUFNRyxhQUFhSDtRQUVuQixJQUFJRyxXQUFXQyxJQUFJLEtBQUssWUFBWTtZQUNsQyxPQUFPO2dCQUFFSixPQUFPO2dCQUFpQkssUUFBUTtZQUFJO1FBQy9DO1FBRUEsSUFBSUYsV0FBV0MsSUFBSSxLQUFLLFNBQVM7WUFDL0IsT0FBTztnQkFBRUosT0FBTztnQkFBdUJLLFFBQVE7WUFBSTtRQUNyRDtRQUVBLE9BQU87WUFDTEwsT0FBT0csV0FBV0csT0FBTyxJQUFJO1lBQzdCRCxRQUFRO1FBQ1Y7SUFDRjtJQUVBLG1DQUFtQztJQUNuQyxPQUFPO1FBQ0xMLE9BQU9BLGlCQUFpQk8sUUFBUVAsTUFBTU0sT0FBTyxHQUFHO1FBQ2hERCxRQUFRO0lBQ1Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3BoaWxpcC9EZXNrdG9wL2VuZ2Vsb29wLXdlYnNpdGUvZW5nZWxvb3AtcmVjb3Jkcy1vbGQvc3JjL2xpYi9zdXBhYmFzZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVCcm93c2VyQ2xpZW50LCBjcmVhdGVTZXJ2ZXJDbGllbnQgfSBmcm9tIFwiQHN1cGFiYXNlL3NzclwiO1xuaW1wb3J0IHR5cGUgeyBSZWFkb25seVJlcXVlc3RDb29raWVzIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL3JlcXVlc3QtY29va2llc1wiO1xuXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCE7XG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSE7XG5jb25zdCBzdXBhYmFzZVNlcnZpY2VLZXkgPSBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZITtcblxuLy8gQ2xpZW50LXNpZGUgU3VwYWJhc2UgY2xpZW50IChmb3IgZnJvbnRlbmQgY29tcG9uZW50cylcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnQoKSB7XG4gIHJldHVybiBjcmVhdGVCcm93c2VyQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXkpO1xufVxuXG4vLyBTZXJ2ZXItc2lkZSBTdXBhYmFzZSBjbGllbnQgKGZvciBBUEkgcm91dGVzIGFuZCBzZXJ2ZXIgY29tcG9uZW50cylcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVTZXJ2ZXJTdXBhYmFzZUNsaWVudChcbiAgY29va2llU3RvcmU/OiBSZWFkb25seVJlcXVlc3RDb29raWVzXG4pIHtcbiAgLy8gSWYgY29va2llU3RvcmUgaXMgcHJvdmlkZWQgKGZyb20gQVBJIHJvdXRlcyksIHVzZSBpdFxuICAvLyBPdGhlcndpc2UsIGltcG9ydCBjb29raWVzIGZyb20gbmV4dC9oZWFkZXJzIChmb3Igc2VydmVyIGNvbXBvbmVudHMpXG4gIGxldCBjb29raWVzU3RvcmUgPSBjb29raWVTdG9yZTtcblxuICBpZiAoIWNvb2tpZXNTdG9yZSkge1xuICAgIGNvbnN0IHsgY29va2llcyB9ID0gYXdhaXQgaW1wb3J0KFwibmV4dC9oZWFkZXJzXCIpO1xuICAgIGNvb2tpZXNTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKTtcbiAgfVxuXG4gIHJldHVybiBjcmVhdGVTZXJ2ZXJDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSwge1xuICAgIGNvb2tpZXM6IHtcbiAgICAgIGdldEFsbCgpIHtcbiAgICAgICAgcmV0dXJuIGNvb2tpZXNTdG9yZS5nZXRBbGwoKTtcbiAgICAgIH0sXG4gICAgICBzZXRBbGwoY29va2llc1RvU2V0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29va2llc1RvU2V0LmZvckVhY2goKHsgbmFtZSwgdmFsdWUsIG9wdGlvbnMgfSkgPT4ge1xuICAgICAgICAgICAgY29va2llc1N0b3JlLnNldChuYW1lLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgIC8vIFRoZSBgc2V0QWxsYCBtZXRob2Qgd2FzIGNhbGxlZCBmcm9tIGEgU2VydmVyIENvbXBvbmVudC5cbiAgICAgICAgICAvLyBUaGlzIGNhbiBiZSBpZ25vcmVkIGlmIHlvdSBoYXZlIG1pZGRsZXdhcmUgcmVmcmVzaGluZ1xuICAgICAgICAgIC8vIHVzZXIgc2Vzc2lvbnMuXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG59XG5cbi8vIFNlcnZpY2Ugcm9sZSBjbGllbnQgZm9yIGFkbWluIG9wZXJhdGlvbnMgKHVzZSBzcGFyaW5nbHkpXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VydmljZVJvbGVTdXBhYmFzZSgpIHtcbiAgcmV0dXJuIGNyZWF0ZVNlcnZlckNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VTZXJ2aWNlS2V5LCB7XG4gICAgY29va2llczoge1xuICAgICAgZ2V0QWxsOiAoKSA9PiBbXSxcbiAgICAgIHNldEFsbDogKCkgPT4ge30sXG4gICAgfSxcbiAgICBhdXRoOiB7XG4gICAgICBhdXRvUmVmcmVzaFRva2VuOiBmYWxzZSxcbiAgICAgIHBlcnNpc3RTZXNzaW9uOiBmYWxzZSxcbiAgICB9LFxuICB9KTtcbn1cblxuLy8gTGVnYWN5IGNsaWVudCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgKGRlcHJlY2F0ZWQgLSByZW1vdmUgZ3JhZHVhbGx5KVxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQnJvd3NlckNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KTtcblxuLy8gVHlwZS1zYWZlIGVycm9yIGhhbmRsaW5nIGhlbHBlclxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVN1cGFiYXNlRXJyb3IoZXJyb3I6IHVua25vd24sIGNvbnRleHQ6IHN0cmluZykge1xuICBjb25zb2xlLmVycm9yKGBTdXBhYmFzZSBlcnJvciBpbiAke2NvbnRleHR9OmAsIGVycm9yKTtcblxuICAvLyBUeXBlIGd1YXJkIHRvIGNoZWNrIGlmIGVycm9yIGhhcyBleHBlY3RlZCBwcm9wZXJ0aWVzXG4gIGlmIChlcnJvciAmJiB0eXBlb2YgZXJyb3IgPT09IFwib2JqZWN0XCIgJiYgXCJjb2RlXCIgaW4gZXJyb3IpIHtcbiAgICBjb25zdCB0eXBlZEVycm9yID0gZXJyb3IgYXMgeyBjb2RlOiBzdHJpbmc7IG1lc3NhZ2U/OiBzdHJpbmcgfTtcblxuICAgIGlmICh0eXBlZEVycm9yLmNvZGUgPT09IFwiUEdSU1QxMTZcIikge1xuICAgICAgcmV0dXJuIHsgZXJyb3I6IFwiTm8gZGF0YSBmb3VuZFwiLCBzdGF0dXM6IDQwNCB9O1xuICAgIH1cblxuICAgIGlmICh0eXBlZEVycm9yLmNvZGUgPT09IFwiMjM1MDVcIikge1xuICAgICAgcmV0dXJuIHsgZXJyb3I6IFwiRGF0YSBhbHJlYWR5IGV4aXN0c1wiLCBzdGF0dXM6IDQwOSB9O1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBlcnJvcjogdHlwZWRFcnJvci5tZXNzYWdlIHx8IFwiRGF0YWJhc2Ugb3BlcmF0aW9uIGZhaWxlZFwiLFxuICAgICAgc3RhdHVzOiA1MDAsXG4gICAgfTtcbiAgfVxuXG4gIC8vIEZhbGxiYWNrIGZvciB1bmtub3duIGVycm9yIHR5cGVzXG4gIHJldHVybiB7XG4gICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogXCJEYXRhYmFzZSBvcGVyYXRpb24gZmFpbGVkXCIsXG4gICAgc3RhdHVzOiA1MDAsXG4gIH07XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlQnJvd3NlckNsaWVudCIsImNyZWF0ZVNlcnZlckNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2VTZXJ2aWNlS2V5IiwiU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSIsImNyZWF0ZUNsaWVudCIsImNyZWF0ZVNlcnZlclN1cGFiYXNlQ2xpZW50IiwiY29va2llU3RvcmUiLCJjb29raWVzU3RvcmUiLCJjb29raWVzIiwiZ2V0QWxsIiwic2V0QWxsIiwiY29va2llc1RvU2V0IiwiZm9yRWFjaCIsIm5hbWUiLCJ2YWx1ZSIsIm9wdGlvbnMiLCJzZXQiLCJnZXRTZXJ2aWNlUm9sZVN1cGFiYXNlIiwiYXV0aCIsImF1dG9SZWZyZXNoVG9rZW4iLCJwZXJzaXN0U2Vzc2lvbiIsInN1cGFiYXNlIiwiaGFuZGxlU3VwYWJhc2VFcnJvciIsImVycm9yIiwiY29udGV4dCIsImNvbnNvbGUiLCJ0eXBlZEVycm9yIiwiY29kZSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/cookie","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&page=%2Fapi%2Fadmin%2Fdashboard-stats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fdashboard-stats%2Froute.ts&appDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fphilip%2FDesktop%2Fengeloop-website%2Fengeloop-records-old&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();